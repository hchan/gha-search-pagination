name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'remix-app/**'
      - '.github/workflows/**'
  
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache conda
        uses: actions/cache@v4
        id: cache
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 1
        with:
          path: |
            ~/conda_pkgs_dir
            /usr/share/miniconda
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yml') }}
    
      - name: Set up Anaconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          activate-environment: gh-search-pagination
          environment-file: environment.yml
          use-only-tar-bz2: false
  
      - name: Debug Environment
        run: |
          conda env list
          conda list
          npm -v
      - name: Remix Cache
        uses: actions/cache@v4
        id: remix-cache
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 1
        with:
          path: |
            '**/node_modules'
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{hashFiles('remix-app/package.json') }}
      - name: Build Remix App
        working-directory: remix-app
        run: |
          npm install
          npm run build
          cp -r build/client/* ../
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
